name: More complex action
# There can be multiple event triggers
#on: [push, workflow_dispatch]
# We can add more granular control over the event triggers as well
on:
  pull_request:
    # This would be adding checks for activity types
    types:
      - opened
  push:
    # This would be adding filters for events
    branches:
      - main
      - 'dev-*' # dev-new dev-this-is-new
      - 'feat/**' # feat/new feat/new/thing
    # Additionally, you can provide a filter for file paths.
    paths:
      - '**.js'
    paths-ignore:
      - '.github/workflows/*'
  workflow_dispatch:
# You can have environment specific secrets being passed in through  GH as well. Have to specify the environment and its
# values on GH for this.
environment: testing-environment-that-we-defined
# Environment values can be defined on the workflow, job, or step level
env:
  TEST_DB_NAME: banana-db
  # To access secret values that have been defined on GitHub. If you try to print this value, then it's hidden on GH.
  TEST_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  repo-action:
    runs-on: ubuntu-latest
    steps:
      # Github Actions do not run in your repository, the repository is not a server.
      # As the actions run on a server, which is separate, then we have to get the code.
      - name: Get the code
        uses: actions/checkout@v3 # The `uses` keyword is for actions.
        # The with keyword goes together with uses. It belongs to the action.
        # It allows you to define config for the action.
        # with:
      - name: Output OS specific env variable
        id: output-os-specific
        runs: echo $TEST_DB_NAME # The way you reference it depends on the OS.

      - name: Output GH specific env variable
        # If can be used to optionally execute the step.
        # We can omit the ${{}} syntax here, because we usually want dynamic values here.
        # We need to include the failure function to change GH default behavior of skipping on failure.
        if: failure() && steps.output-os-specific.outcome == 'failure
        runs: |
          echo "Test DB name: ${{ env.TEST_DB_NAME }}"

  # Multiple jobs run in parallel by default.
  other-action:
    # Each job has its own runner, completely separate from the others.
    runs-on: ubuntu-latest
    # To force the jobs into a sequential flow, then define what job this depends on.
    needs: repo-action
    steps:
      - name: Get the code
        uses: actions/checkout@v3

      - name: Load & cache dependencies
        # Do not have to provide the action.yml file here, because GH will automatically look for it here. Just like index.js in JS.
        # Have to provide the path from the root.
        uses: ./.github/actions/cached-deps

      - name: Output Github context
        # We use the ${{  }} syntax to access some variables that are made available by GitHub.
        # There are also a bunch of util methods that can be used.
        run: echo "${{ toJSON(github) }}"